# Generated SpecFlow feature from FlowSphere configuration
# Auto-generated by FlowSphere MCP Server
# Configuration: {{ config.get('name', 'Unnamed Flow') }}
# Generated: {{ generation_timestamp }}

Feature: {{ config.get('name', 'API Test Flow') }}
  {{ config.get('description', 'API testing scenarios generated from FlowSphere configuration') }}

{% for node in nodes %}
  Scenario: {{ node.get('name', 'Unnamed scenario') }}
    Given I have the API base URL from configuration
{% if node.get('conditions') %}
    And the following conditions are met
{% for condition in node.get('conditions', []) %}
      | {{ condition.get('leftValue', '') }} | {{ condition.get('operator', 'equals') }} | {{ condition.get('rightValue', '') }} |
{% endfor %}
{% endif %}
    When I execute {{ node.method }} request to "{{ node.url }}"
{% if node.get('headers') %}
    And I set the following headers
{% for key, value in node.get('headers', {}).items() %}
      | {{ key }} | {{ value }} |
{% endfor %}
{% endif %}
{% if node.get('body') %}
    And I set the request body
{% endif %}
{% for validation in node.get('validations', []) %}
{% if validation.get('httpStatusCode') %}
    Then the response status code should be {{ validation.httpStatusCode }}
{% endif %}
{% if validation.get('field') %}
    And the response field "{{ validation.field }}" should {{ validation.get('operator', 'equals') }} "{{ validation.get('value', '') }}"
{% endif %}
{% endfor %}

{% endfor %}
